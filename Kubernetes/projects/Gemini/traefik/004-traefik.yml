---
apiVersion: v1
kind: ServiceAccount
metadata:
  # namespace: kube-system
  name: traefik-ingress-controller
---
kind: Deployment
apiVersion: apps/v1
metadata:
  # namespace: kube-system
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
      # annotations:
        # container.apparmor.security.beta.kubernetes.io/traefik: runtime/default
    spec:
      serviceAccountName: traefik-ingress-controller
      securityContext:
        # Use nogroup (and needs nobody) for the acme.json file
        # for storing TLS
        fsGroup: 65534
      initContainers:
        - name: volume-permissions
          image: busybox:1.32
          command: ['sh', '-c', 'touch /etc/traefik/certs/acme.json && chown 65534:65534 /etc/traefik/certs/acme.json && chmod 600 /etc/traefik/certs/acme.json']
          volumeMounts:
            - name: certificates
              mountPath: /etc/traefik/certs
      containers:
        - name: traefik
          image: traefik:v2.5.4
          args:
            - --api.dashboard=true
            - --api.insecure
            - --ping=true
            - --accesslog
            - --entrypoints.traefik.address=:9000
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --providers.kubernetescrd
            - --providers.kubernetescrd.allowCrossNamespace=true
            - --providers.kubernetesingress
            - --certificatesresolvers.le.acme.email=me@tpeterson.io
            - --certificatesresolvers.le.acme.storage=/etc/traefik/certs/acme.json
            - --certificatesresolvers.ke.acme.httpchallenge=true
            - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
            - --log
            - --log.level=INFO
          # securityContext:
          #   readOnlyRootFilesystem: true
          #   runAsNonRoot: true
          #   # Run the container as nobody:nogroup
          #   runAsUser: 65534
          #   runAsGroup: 65534
          #   capabilities:
          #     drop:
          #       - ALL
          # livenessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /ping
          #     port: 9000
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          #   timeoutSeconds: 3
          # resources:
          #   limits:
          #     memory: '100Mi'
          #     cpu: '1000m'
          ports:
            # The Traefik container is listening on ports > 1024 so the container
            # can be run as a non-root user and they can bind to these ports.
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: traefik
              containerPort: 9000
          volumeMounts:
            - name: certificates
              mountPath: /etc/traefik/certs
          # env:
            # - name: GODADDY_API_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: godaddy
            #       key: GODADDY_API_KEY
            # - name: GODADDY_API_SECRET
            #   valueFrom:
            #     secretKeyRef:
            #       name: godaddy
            #       key: GODADDY_API_SECRET
      volumes:
        - name: certificates
          persistentVolumeClaim:
            claimName: certificates-volume
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - protocol: TCP
      port: 80
      name: web
      targetPort: 80
    - protocol: TCP
      port: 443
      name: websecure
      targetPort: 443
    - protocol: TCP
      port: 9000
      name: traefik
      targetPort: 9000